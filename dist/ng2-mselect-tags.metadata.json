{"__symbolic":"module","version":3,"metadata":{"MSelectTagsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"}],"declarations":[{"__symbolic":"reference","name":"MSelectTagsComponent"},{"__symbolic":"reference","name":"MSelectTagsDirective"},{"__symbolic":"reference","name":"MSelectTagsPile"}],"exports":[{"__symbolic":"reference","name":"MSelectTagsComponent"},{"__symbolic":"reference","name":"MSelectTagsDirective"},{"__symbolic":"reference","name":"MSelectTagsPile"}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"MSelectTagsModule"},"providers":[{"__symbolic":"reference","name":"MSelectTagsService"}]}}}},"PARAM_TAGS_CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"MSelectTagsComponent"},"multi":true},"MSelectTagsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ng2-mselect-tags","template":"\n  <div class=\"input-field\">\n    <input type=\"text\" name=\"search\" [formControl]=\"search\" (blur)=\"onInputBlur()\" placeholder=\"Enter team name\">\n  </div>\n  <div class=\"dropdown z-depth-1\" [style.maxHeight.px]=\"calculateHeight()\">\n    <ul>\n      <li *ngFor=\"let item of items\" (click)=\"add($event, item)\">{{item[listBy]}}\n        <i class=\"material-icons\">add</i>\n      </li>\n    </ul>\n  </div>\n  <div class=\"collect\" [style.height.em]=\"maxSelectHeight\">\n    <ul *ngIf=\"selected\">\n      <li *ngFor=\"let selItem of selected\" (click)=\"remove($event, selItem)\" [class.disabled]=\"isDisabled\">{{selItem[listBy]}}\n        <div class=\"del\"><i class=\"material-icons\">clear</i></div>\n      </li>\n    </ul>\n  </div>","styles":[":host { display: block; position: relative; } :host .input-field input, :host .input-field { margin: 0; padding: 0; } :host .input-field { margin-top: -1rem; } .dropdown { position: absolute; left: 0; right: 0; width: 100%; background: #fff; /*display: none;*/ border: solid #41A62A; border-width: 0 1px 1px 1px; z-index: 100; overflow: auto; } .dropdown ul { padding: 0; margin: 0; } .dropdown li { display: flex; align-items: center; padding: 0.5rem; justify-content: space-between; cursor: pointer; } .dropdown li:hover { background: #eee; } .dropdown li i { display: none; color: #41A62A; font-size: 1.2rem; } .dropdown li:hover i { display: block; } .dropdown.active { display: block; } .dropdown.pos-bottom { top: 2rem; } .dropdown.pos-top { bottom: 2rem; } .collect { border-bottom: 1px solid #888; overflow: auto; } .collect ul { list-style: none; padding: 0; margin: 0; } .collect li { position: relative; font-size: 0.8rem; display: inline-block; padding: 0.25rem; margin: 0.25rem; background: #eee; border-radius: 0.5rem; cursor: pointer; } .collect li.disabled { pointer-events: none; background: #e0e0e0; } .collect li .del { position: absolute;  top: 0; left: 0; right: 0; bottom: 0; z-index: 120; background: rgba(0,0,0,0.66); border-radius: 0.5rem; display: none; align-items: center; justify-content: center; } .collect li:hover .del { display: flex; } .collect i { display: block; font-size: 1em; color: #fff; }"],"providers":[{"__symbolic":"reference","name":"PARAM_TAGS_CONTROL_VALUE_ACCESSOR"}]}]}],"members":{"minChars":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"list":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"accessBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"listBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"maxPanelHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"maxContainerRows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MSelectTagsService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"onInputBlur":[{"__symbolic":"method"}],"checkItems":[{"__symbolic":"method"}],"calculateHeight":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}]}},"MSelectTagsDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive"},"arguments":[{"selector":"[ng2MselectTags]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"}]}]}},"MSelectTagsPile":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe"},"arguments":[{"name":"ng2-mselect-tags"}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"transform":[{"__symbolic":"method"}]}},"MSelectTagsService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"}]}],"getAsyncOptions":[{"__symbolic":"method"}],"composeUrl":[{"__symbolic":"method"}]}}},"origins":{"MSelectTagsModule":"./index","PARAM_TAGS_CONTROL_VALUE_ACCESSOR":"./ng2-mselect-tags.component","MSelectTagsComponent":"./ng2-mselect-tags.component","MSelectTagsDirective":"./ng2-mselect-tags.directive","MSelectTagsPile":"./ng2-mselect-tags.pipe","MSelectTagsService":"./ng2-mselect-tags.service"},"importAs":"ng2-mselect-tags"}