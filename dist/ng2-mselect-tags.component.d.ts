import { OnInit, OnDestroy, ElementRef } from '@angular/core';
import { ControlValueAccessor, FormControl } from '@angular/forms';
import 'rxjs/add/operator/debounceTime';
import 'rxjs/add/operator/distinctUntilChanged';
import 'rxjs/add/observable/of';
import 'rxjs/add/operator/filter';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/switchMap';
import { MSelectTagsService } from './ng2-mselect-tags.service';
export declare const PARAM_TAGS_CONTROL_VALUE_ACCESSOR: any;
/** The fixed height of every option element. */
export declare const SELECT_OPTION_HEIGHT = 32;
export declare class MSelectTagsComponent implements OnInit, OnDestroy, ControlValueAccessor {
    private multiService;
    minChars: number;
    placeholder: string;
    list: {}[];
    searchUrl: string;
    accessBy: string;
    listBy: string;
    maxPanelHeight: number;
    maxContainerRows: number;
    dropdown: ElementRef;
    searchPanel: ElementRef;
    items: {}[];
    search: FormControl;
    selected: {}[];
    selectOptionsHeight: any;
    isDisabled: boolean;
    isTop: boolean;
    isShown: boolean;
    private itemsSubscription;
    private onTouchedCallback;
    private onChangeCallback;
    constructor(multiService: MSelectTagsService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    value: any;
    readonly maxSelectHeight: number;
    readonly searchPanelHeight: string | number;
    onBlur(): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    onInputBlur(): void;
    checkItems(): boolean;
    checkOverlayPosition(): Promise<boolean>;
    private add($event, item);
    private remove($event, item);
    private getSearchPanelRect();
}
